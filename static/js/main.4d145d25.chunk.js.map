{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image2.png","components/Cards/Cards.module.css","App.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","modifiedData","console","log","fetchDailyData","modifiedData2","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","option","legend","display","title","text","CountryPicker","handleCountryChange","fetechedCountries","setFetechedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","imgBox","image","src","coronaImage","footerStyle","footerStyle2","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d145d25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2s4Tn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"CountryPicker_FormControl__2CXsI\"};","module.exports = __webpack_public_path__ + \"static/media/image2.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1o6HK\",\"card\":\"Cards_card__3ZC2Y\",\"infected\":\"Cards_infected__2PqeU\",\"recovered\":\"Cards_recovered__PCzIM\",\"deaths\":\"Cards_deaths__1DJUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3jRQs\",\"image\":\"App_image__NMIAB\",\"footerStyle\":\"App_footerStyle__2s-ri\",\"footerStyle2\":\"App_footerStyle2__1xbN_\"};","import React from \"react\";\r\nimport { Card,CardContent,Typography,Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport cx from \"classnames\";//to add multiple classes in one\r\n\r\nimport styles from \"./Cards.module.css\";\r\nconst Cards=({data:{confirmed, recovered,deaths,lastUpdate}})=>{\r\n    // console.log(props);\r\n    if(!confirmed){\r\n        return \"...Loading\";\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\"  gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5 \">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\"  gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5 \">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\"  gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5 \">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from \"axios\";\r\nimport { logDOM } from \"@testing-library/react\";\r\n\r\n// api url\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData=async (country)=> {\r\n    let changableUrl=url;\r\n    if(country){\r\n        changableUrl=`${url}/countries/${country}`\r\n\r\n    }\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}} =await axios.get(changableUrl);\r\n        const modifiedData={confirmed,recovered,deaths,lastUpdate,};\r\n        return modifiedData;\r\n        // console.log(response);\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData=async()=>{\r\n    try {\r\n        const {data}=await axios.get(`${url}/daily`);\r\n        const modifiedData2=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }))\r\n        return modifiedData2;\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries=async()=>{\r\n    try{\r\n        const {data: {countries}} =await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name);\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React,{useState,useEffect} from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\n// react charts api\r\nimport {Line,Bar} from \"react-chartjs-2\";\r\n// charts css\r\nimport styles from \"./Chart.module.css\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nconst Chart=({ data:{confirmed,recovered,deaths},country })=>{\r\n    const [dailyData, setDailyData]=useState([]);//works setstate\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI=async() =>{\r\n            // const dailyData = await fetchDailyData();\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart=(\r\n        (dailyData.length!==0) \r\n        ?(<Line\r\n            data={{\r\n                labels: dailyData.map(({ date })=> date),//i=>i.date\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:\"Infected\",\r\n                    borderColor:\"#206a5d\",\r\n                    fill:true,\r\n                },{\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label:\"Deaths\",\r\n                    borderColor:\"#e23e57\",\r\n                    backgroundColor:\"rgba(255,0,0,0.5)\",\r\n                    fill:true,\r\n                }],\r\n            }}\r\n        />):null\r\n    );    \r\n    // console.log(confirmed,recovered,deaths);\r\n    const barChart=(\r\n        confirmed\r\n        ?(<Bar \r\n            data={{\r\n                labels:[\"Infected\",\"Recovered\",\"Deaths\"],\r\n                datasets:[{\r\n                    label:\"People\",\r\n                    backgroundColor:['#206a5d','#81b214','#8f0d20'],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            option={{\r\n                legend:{display: false},\r\n                title: {display:true,text:`Current state in ${country}`},\r\n\r\n            }}\r\n        />):null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from \"react\";\r\nimport {NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport {fetchCountries} from \"../../api\"\r\nconst CountryPicker=({handleCountryChange})=>{\r\n    const [fetechedCountries,setFetechedCountries]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI =async()=>{\r\n            setFetechedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetechedCountries]);\r\n\r\n    console.log(fetechedCountries );\r\n    return(\r\n        <FormControl className={styles.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetechedCountries.map((country,i)=>\r\n                    <option key={i} value={country}>\r\n                        {country}\r\n                    </option>\r\n                )};\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\n\r\n// import Cards from \"./components/Cards/Cards\";\r\n// import Chart from \"./components/Chart/Chart\";\r\n// import CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\n\r\nimport { Cards, Chart, CountryPicker} from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport {fetchData} from \"./api\";\r\nimport coronaImage from \"./images/image2.png\"\r\n\r\n\r\nclass App extends React.Component {\r\n    state={\r\n        data:{},\r\n        country:'',\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();//using {} directly takes data from object;\r\n        this.setState({ data:fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async(country)=>{\r\n        const fetchedData =await fetchData(country);\r\n        // console.log(country);\r\n        // console.log(fetchedData);\r\n        // set state\r\n        this.setState({data:fetchedData,country:country});\r\n    }\r\n    render() {\r\n        //get data from state object by variable name as data;\r\n        const {data ,country}=this.state; \r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.imgBox}>\r\n                    <img className={styles.image} src={coronaImage}/>\r\n                </div>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                <footer className={styles.footerStyle}>\"Stay Home\",\"Stay Safe\"</footer>\r\n                <footer className={styles.footerStyle2}> Big &#10084; Kaushal</footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />,document.getElementById(\"root\"));"],"sourceRoot":""}